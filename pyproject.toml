[project]
name = "dlt-all"
version = "1.14.1"
description = "Combinded dlt packages"
authors = [{ name = "dltHub Inc.", email = "services@dlthub.com" }]
requires-python = ">=3.9.2, <3.15"
readme = "README.md"
license = "Apache-2.0"
maintainers = [
    { name = "Marcin Rudolf", email = "marcin@dlthub.com" },
    { name = "Adrian Brudaru", email = "adrian@dlthub.com" },
    { name = "Anton Burnashev", email = "anton@dlthub.com" },
    { name = "David Scharf", email = "david@dlthub.com" },
]
keywords = ["etl"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
]
dependencies = [
    "dlt",
]

[project.urls]
Homepage = "https://github.com/dlt-hub"
Repository = "https://github.com/dlt-hub/dlt"

[project.scripts]
dlt = "dlt.cli._dlt:_main"

# NOTE: we re-expose dlt extras here to make them available in the root package for testing
[project.optional-dependencies]
gcp = ["dlt[gcp]"]
bigquery = ["dlt[bigquery]"]
postgres = ["dlt[postgres]"]
redshift = ["dlt[redshift]"]
parquet = ["dlt[parquet]"]
duckdb = ["dlt[duckdb]"]
filesystem = ["dlt[filesystem]"]
s3 = ["dlt[s3]"]
gs = ["dlt[gs]"]
az = ["dlt[az]"]
sftp = ["dlt[sftp]"]
snowflake = ["dlt[snowflake]"]
motherduck = ["dlt[motherduck]"]
cli = ["dlt[cli]"]
athena = ["dlt[athena]"]
weaviate = ["dlt[weaviate]"]
mssql = ["dlt[mssql]"]
synapse = ["dlt[synapse]"]
qdrant = ["dlt[qdrant]"]
databricks = ["dlt[databricks]"]
clickhouse = ["dlt[clickhouse]"]
dremio = ["dlt[dremio]"]
lancedb = ["dlt[lancedb]"]
deltalake = ["dlt[deltalake]"]
sql_database = ["dlt[sql_database]"]
sqlalchemy = ["dlt[sqlalchemy]"]
pyiceberg = ["dlt[pyiceberg]"]
postgis = ["dlt[postgis]"]
workspace = ["dlt[workspace]"]


[dependency-groups]
# NOTE: add only dependencies used for linting, type checking etc. anything else goes to pipeline group
# we use those deps in common tests to make sure they work without extra dependencies so if you add them
# here you'll break everything
dev = [
    "dlt_tests",
    "requests-mock>=1.10.0,<2",
    "types-click>=7.1.8,<8",
    "sqlfluff>=2.3.2,<3",
    "types-deprecated>=1.2.9.2,<2",
    "pytest-console-scripts>=1.4.1,<2",
    "pytest>=7.4.4,<8",
    "mypy>=1.11.0,<1.13.0",
    "flake8>=7.0.0,<8",
    "bandit>=1.7.0,<2",
    "black>=23.7.0,<24",
    "isort>=5.12.0,<6",
    "flake8-bugbear>=22.0.0,<23",
    "pytest-order>=1.0.0",
    "pytest-cases>=3.8.6",
    "pytest-forked>=1.3.0",
    "types-PyYAML>=6.0.7",
    "types-cachetools>=4.2.9",
    "types-protobuf>=3.19.8",
    "types-simplejson>=3.17.0",
    "types-requests>=2.25.6",
    "types-python-dateutil>=2.8.15",
    "flake8-tidy-imports>=4.8.0",
    "flake8-encodings",
    "flake8-builtins>=1.5.3,<2",
    "boto3-stubs[lakeformation,s3]>=1.28.28,<2",
    "types-tqdm>=4.66.0.2,<5",
    "types-psutil>=5.9.5.16,<6",
    "types-psycopg2>=2.9.21.14,<3",
    "pytest-asyncio>=0.23.5,<0.24",
    "types-sqlalchemy>=1.4.53.38,<2",
    "types-pytz>=2024.1.0.20240203",
    "ruff>=0.3.2,<0.4",
    "pyjwt>=2.8.0,<3",
    "pytest-mock>=3.14.0,<4",
    "types-regex>=2024.5.15.20240519,<2025",
    "flake8-print>=5.0.0,<6",
    "pip>=24.0.0",
    "pydoclint>=0.6.5,<0.7",
]

# NOTE: those dependencies are used to test built in sources
sources = [
    "connectorx>=0.3.3 ; python_version >= '3.9'",
    "connectorx>=0.4.0,<0.4.2 ; python_version >= '3.10'",
    "pymysql>=1.1.0,<2",
    "openpyxl>=3,<4",
    "mimesis>=7.0.0,<8",
    "sqlalchemy<2",
]

# NOTE: those dependencies are used to test pipelines, do not include what is in extras for destinations
pipeline = [
    "cffi>=1.16",
    "greenlet>=3.1",
    "regex>=2024.10",
    "sqlalchemy<2",
    "cryptography>=41.0.7,<42",
    "shapely>=2.0.6",
    "tqdm>=4.65.0,<5",
    "enlighten>=1.11.2,<2",
    "alive-progress>=3.1.1,<4",
    "pydantic>=2.10",
    "pyarrow>=16.0.0",
    # this pandas and above has functional numpy dependency
    "pandas>=2.1.4",
    # keep last duckdb version that works with azure and iceberg correctly
    "duckdb<1.2.1",
]
airflow = ["apache-airflow>=2.8.0,<3 ; python_version < '3.12'"]
ibis = [
    "ibis-framework[duckdb, postgres, bigquery, snowflake, mssql, clickhouse, databricks]>=10.5.0 ; python_version >= '3.10' and python_version < '3.13'",
    "ibis-framework[duckdb, postgres, bigquery, snowflake, clickhouse, databricks]>=10.5.0 ; python_version >= '3.13'"
]
streamlit = ["streamlit>=1.40.0,<2 ; python_version >= '3.9' and python_version != '3.9.7' and python_version < '3.14'"]
dashboard-tests = [
    "playwright>=1.52.0,<2",
    "pytest-playwright>=0.7.0,<1",
    ]
# NOTE: required to use google secrets config provider
providers = ["google-api-python-client>=2.86.0,<3"]
sentry-sdk = ["sentry-sdk>=2.0.0,<3"]
dbt = [
    "dbt-core>=1.5.0",
    "dbt-redshift>=1.5.0",
    "dbt-bigquery>=1.5.0",
    "dbt-duckdb>=1.5.0",
    "dbt-snowflake>=1.5.0",
    "dbt-athena-community>=1.5.0",
    "dbt-sqlserver>=1.5.0 ; python_version < '3.13'",
]
adbc = [
    "adbc-driver-postgresql>=1.6.0"
]
# NOTE: depedencies required to lint and test docs and examples
docs = [
    "SQLAlchemy>=1.4.0",
    "pymysql>=1.1.0,<2",
    "pypdf2>=3.0.1,<4",
    "pydoc-markdown>=4.8.2,<5",
    "dbt-core>=1.5.0",
    "dbt-duckdb>=1.5.0",
    "pymongo>=4.3.3",
    "pandas>=2.1.4",
    "alive-progress>=3.0.1",
    "pyarrow>=16.0.0",
    "psycopg2-binary>=2.9",
    "lancedb>=0.8.2 ; python_version < '3.13'",
    "openai>=1.45",
    "connectorx>=0.3.2,<0.4.2",
    "modal>=0.64.170",
    # google secrets provider
    "google-api-python-client>=1.7.11",
    "google-auth-oauthlib>=1.0.0,<2",
]

[tool.uv]

[tool.uv.sources]
dlt = { workspace = true }
dlt_tests = { workspace = true }
flake8-encodings = { git = "https://github.com/dlt-hub/flake8-encodings.git", branch = "disable_jedi_support" }

[tool.uv.workspace]
members = ["packages/*"]

[tool.hatch.build.targets.sdist]
packages = ["dlt"]
include = [
    "LICENSE.txt",
    "README.md",
    "dlt/sources/pipeline_templates/.gitignore",
    "dlt/sources/pipeline_templates/.dlt/config.toml",
    "dlt/helpers/dashboard/dlt_dashboard_styles.css"
]

[tool.hatch.build.targets.wheel]
packages = ["dlt"]
include = [
    "LICENSE.txt",
    "README.md",
    "dlt/sources/pipeline_templates/.gitignore",
    "dlt/sources/pipeline_templates/.dlt/config.toml",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
preview = true

[tool.isort]
color_output = true
line_length = 100
profile = "black"
src_paths = ["dlt"]
multi_line_output = 3

