
name: test common

on:
  pull_request:
    branches:
      - master
      - devel
  workflow_dispatch:

env:
  RUNTIME__LOG_LEVEL: ERROR

jobs:
  get_docs_changes:
    uses: ./.github/workflows/get_docs_changes.yml

  run_common:
    name: Tests common dlt code
    needs: get_docs_changes
    if: needs.get_docs_changes.outputs.changes_outside_docs == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out
        uses: actions/checkout@master

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"

      - name: Install Poetry
        # https://github.com/snok/install-poetry#running-on-windows
        uses: snok/install-poetry@v1.3.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # - name: Get pip cache dir
      #   id: pip-cache
      #   run: |
      #     echo "::set-output name=dir::$(poetry env info -p)"
      #     echo "$(poetry env info -p)"

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          # path: ${{ steps.pip-cache.outputs.dir }}
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction  -E pyarrow

      - run: |
          poetry run pytest tests/common tests/normalize tests/reflection tests/sources tests/cli/common
        if: runner.os != 'Windows'
        name: Run tests Linux/MAC
      - run: |
          poetry run pytest tests/common tests/normalize tests/reflection tests/sources tests/cli/common -m "not forked"
        if: runner.os == 'Windows'
        name: Run tests Windows
        shell: cmd

      - name: Install extra dependencies
        run: poetry install --no-interaction -E duckdb

      - run: |
          poetry run pytest tests/extract tests/pipeline
        if: runner.os != 'Windows'
        name: Run extra tests Linux/MAC
      - run: |
          poetry run pytest tests/extract tests/pipeline -m "not forked"
        if: runner.os == 'Windows'
        name: Run extra tests Windows
        shell: cmd

  matrix_job_required_check:
    name: Common tests
    needs: run_common
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check matrix job results
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One or more matrix job tests failed or were cancelled. You may need to re-run them." && exit 1
