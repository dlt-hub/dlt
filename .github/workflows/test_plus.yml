name: plus | plus

#
# dlt-plus smoke tests against the nightly build.
#

on:
  pull_request:
    branches:
      - master
      - devel
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUNTIME__LOG_LEVEL: ERROR
  RUNTIME__DLTHUB_TELEMETRY_ENDPOINT: ${{ secrets.RUNTIME__DLTHUB_TELEMETRY_ENDPOINT }}

jobs:
  get_docs_changes:
    name: docs changes
    uses: ./.github/workflows/get_docs_changes.yml

  run_common:
    name: test
    needs: get_docs_changes
    if: needs.get_docs_changes.outputs.changes_outside_docs == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10.x", "3.11.x", "3.12.x"]
        plus_dep: ["dlt-plus", "https://dlt-packages.fra1.digitaloceanspaces.com/dlt-plus/dlt_plus-0.0.0+nightly-py3-none-any.whl"]
        # Test all python versions on ubuntu only
        exclude:
        - os: "macos-latest"
          python-version: "3.10.x"
        - os: "macos-latest"
          python-version: "3.12.x"
        - os: "windows-latest"
          python-version: "3.10.x"
        - os: "windows-latest"
          python-version: "3.12.x"

    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out
        uses: actions/checkout@master

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        # https://github.com/snok/install-poetry#running-on-windows
        uses: snok/install-poetry@v1.3.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          version: 1.8.5

      # NOTE: needed for mssql source tests in plus
      - name: Install ODBC driver for SQL Server
        run: |
          sudo ACCEPT_EULA=Y apt-get install --yes msodbcsql18
        if: matrix.os == 'ubuntu-latest'

      # NOTE: do not cache. we want to have a clean state each run and we upgrade depdendencies later
      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v3
      #   with:
      #     # path: ${{ steps.pip-cache.outputs.dir }}
      #     path: .venv
      #     key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install all dependencies
        run: make dev


      - name: Install dlt-plus nightly devel build without cache
        run: poetry run pip install --upgrade --force-reinstall --no-cache-dir ${{ matrix.plus_dep }}

      - name: Run tests
        run: poetry run pytest tests/plus
        if: matrix.os == 'ubuntu-latest'

      - name: Run tests on mac on win without mssql driver
        run: poetry run pytest tests/plus -m "not mssql"
        if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'

  matrix_job_required_check:
    name: common | common tests
    needs: run_common
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check matrix job results
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One or more matrix job tests failed or were cancelled. You may need to re-run them." && exit 1
