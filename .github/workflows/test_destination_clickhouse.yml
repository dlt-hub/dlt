name: test | clickhouse

on:
  pull_request:
    branches:
      - master
      - devel
    types:
      - opened
      - synchronize
      - labeled
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # RUNTIME__SENTRY_DSN: https://6f6f7b6f8e0f458a89be4187603b55fe@o1061158.ingest.sentry.io/4504819859914752
  RUNTIME__LOG_LEVEL: ERROR
  DLT_SECRETS_TOML: ${{ secrets.DLT_SECRETS_TOML }}

  ACTIVE_DESTINATIONS: "[\"clickhouse\"]"
  ALL_FILESYSTEM_DRIVERS: "[\"memory\", \"file\"]"

jobs:
  authorize:
    # run when label is assigned OR when we are not a fork
    if: ${{ github.event.label.name == 'ci from fork' || (github.event.pull_request.head.repo.full_name == github.repository && (github.event.action == 'opened' || github.event.action == 'synchronize'))}}
    runs-on: ubuntu-latest
    steps:
      - run: true

  get_docs_changes:
    name: docs changes
    needs: authorize
    uses: ./.github/workflows/get_docs_changes.yml

  run_loader:
    name: test | clickhouse tests
    needs: get_docs_changes
    if: needs.get_docs_changes.outputs.changes_outside_docs == 'true'
    defaults:
      run:
        shell: bash
    runs-on: "ubuntu-latest"

    steps:

      - name: Check out
        uses: actions/checkout@master
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.10
          activate-environment: true
          enable-cache: true

      - name: Install dependencies
        run: uv sync --extra clickhouse --extra parquet --group providers --group sentry-sdk --group pipeline --group ibis

      - name: create secrets.toml
        run: pwd && echo "$DLT_SECRETS_TOML" > tests/.dlt/secrets.toml

      # OSS ClickHouse
      - run: |
          docker compose -f "tests/load/clickhouse/clickhouse-compose.yml" up -d
          echo "Waiting for ClickHouse to be healthy..."
          timeout 30s bash -c 'until docker compose -f "tests/load/clickhouse/clickhouse-compose.yml" ps | grep -q "healthy"; do sleep 1; done'
          echo "ClickHouse is up and running"
        name: Start ClickHouse OSS

      - run: pytest tests/load --ignore tests/load/sources
        name: Run all tests Linux (ClickHouse OSS)
        env:
          DESTINATION__CLICKHOUSE__CREDENTIALS__HOST: localhost
          DESTINATION__CLICKHOUSE__CREDENTIALS__DATABASE: dlt_data
          DESTINATION__CLICKHOUSE__CREDENTIALS__USERNAME: loader
          DESTINATION__CLICKHOUSE__CREDENTIALS__PASSWORD: loader
          DESTINATION__CLICKHOUSE__CREDENTIALS__PORT: 9000
          DESTINATION__CLICKHOUSE__CREDENTIALS__HTTP_PORT: 8123
          DESTINATION__CLICKHOUSE__CREDENTIALS__SECURE: 0

      - name: Stop ClickHouse OSS
        if: always()
        run: docker compose -f "tests/load/clickhouse/clickhouse-compose.yml" down -v

      # ClickHouse Cloud
      - run: |
          pytest tests/load --ignore tests/load/sources -m "essential"
        name: Run essential tests Linux (ClickHouse Cloud)
        if: ${{ ! (contains(github.event.pull_request.labels.*.name, 'ci full') || github.event_name == 'schedule')}}

      - run: |
          pytest tests/load --ignore tests/load/sources
        name: Run all tests Linux (ClickHouse Cloud)
        if: ${{ contains(github.event.pull_request.labels.*.name, 'ci full') || github.event_name == 'schedule'}}

