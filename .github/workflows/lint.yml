
name: lint

on:
  pull_request:
    branches:
      - master
      - devel
  workflow_dispatch:

jobs:
  # get_docs_changes:
  #   uses: ./.github/workflows/get_docs_changes.yml

  run_lint:
    name: Runs make lint
    # needs: get_docs_changes
    # if: needs.get_docs_changes.outputs.changes_outside_docs == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.11.x"]
        # Test all python versions on ubuntu only
        # include:
        #   - python-version: "3.8.x"
        #     os: "ubuntu-latest"
        #   - python-version: "3.9.x"
        #     os: "ubuntu-latest"
        #   - python-version: "3.10.x"
        #     os: "ubuntu-latest"

    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}    

    # runs-on: ubuntu-latest

    steps:

      - name: Check out
        uses: actions/checkout@master

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"

      - name: Install make     
        if: runner.os == 'Windows'
        run: choco install make

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        # run: poetry install --no-interaction --all-extras --with airflow --with docs --with providers --with sentry-sdk --with pipeline
        run: make dev
        shell: bash

      # - name: Install self
      #   run: poetry install --no-interaction


      - name: Run lint
        run: make lint
        shell: bash

      # - name: print envs
      #   run: |
      #     echo "The GitHub Actor's username is: $GITHUB_ACTOR"
      #     echo "The GitHub repo owner is: $GITHUB_REPOSITORY_OWNER"
      #     echo "The GitHub repo is: $GITHUB_REPOSITORY"

  matrix_job_required_check:
    name: Lint results
    needs: run_lint
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check matrix job results
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One or more matrix job tests failed or were cancelled. You may need to re-run them." && exit 1      
