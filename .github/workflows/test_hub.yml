name: hub | dlthub features

#
# dlthub smoke tests against the nightly build.
#

on:
  workflow_call:
  workflow_dispatch:

env:
  RUNTIME__LOG_LEVEL: ERROR

jobs:
  run_hub_features:
    name: test
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        dlthub_dep: ["dlthub", "https://dlt-packages.fra1.digitaloceanspaces.com/dlthub/dlthub-0.0.0+nightly-py3-none-any.whl"]
        # Test all python versions on ubuntu only
        exclude:
        - os: "macos-latest"
          python-version: "3.10"
        - os: "macos-latest"
          python-version: "3.12"
        - os: "macos-latest"
          python-version: "3.13"
        - os: "windows-latest"
          python-version: "3.10"
        - os: "windows-latest"
          python-version: "3.12"
        - os: "windows-latest"
          python-version: "3.13"

    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out
        uses: actions/checkout@master

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          enable-cache: true

      # NOTE: needed for mssql source tests in plus
      - name: Install ODBC driver for SQL Server
        run: |
          sudo ACCEPT_EULA=Y apt-get install --yes msodbcsql18
        if: matrix.os == 'ubuntu-latest'

      - name: Install ODBC driver for SQL Server (macOS)
        if: matrix.os == 'macos-latest'
        env:
          ACCEPT_EULA: Y
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_ANALYTICS: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release
          brew install msodbcsql18
          # quick diagnostics (do not fail the build if unavailable)
          odbcinst -j || true
          odbcinst -q -d || true

      - name: Install all dependencies
        run: make dev

      - name: Install dlthub nightly devel build without cache
        run: uv run pip install --upgrade --force-reinstall --no-cache-dir ${{ matrix.dlthub_dep }}

      - name: Run tests
        run: pytest tests/hub
        if: matrix.os == 'ubuntu-latest'

      # - name: Run tests on macOS
      #   run: pytest tests/hub
      #   if: matrix.os == 'macos-latest'

      # - name: Run tests on Windows without mssql driver
      #   run: pytest tests/hub -m "not mssql"
      #   if: matrix.os == 'windows-latest'

  matrix_job_required_check:
    name: hub | dlthub features tests
    needs: run_hub_features
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check matrix job results
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One or more matrix job tests failed or were cancelled. You may need to re-run them." && exit 1
